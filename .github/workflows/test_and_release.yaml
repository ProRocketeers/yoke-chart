name: CI (Go + yoke)

on:
  push:
    branches: ["**"]
    tags: ["**"]
  pull_request:
    branches: ["**"]

env:
  REGISTRY_USERNAME: ${{ github.actor }}
  # should be already provided in the pipeline
  REGISTRY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
  YOKE_CLI_VERSION: v0.16.6
  YOKE_DOWNLOAD_URL: https://github.com/yokecd/yoke/releases/download/${{ env.YOKE_CLI_VERSION}}/yoke_${{ env.YOKE_CLI_VERSION}}_linux_amd64.gz

jobs:
  test:
    name: test chart
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Run go tests
        run: |
          go test -count=1 -timeout 30s ./...

  release:
    name: release chart
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags/')
    env:
      TAG_NAME: ${{ github.ref_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go (for possible build fallback)
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Ensure yoke binary is available
        id: get-yoke
        run: |
          set -euo pipefail

          if [ -z "${YOKE_CLI_VERSION:-}" ]; then
            echo "ERROR: YOKE_CLI_VERSION is not set" >&2
            exit 1
          fi

          echo "Downloading yoke from: $YOKE_DOWNLOAD_URL"
          curl -sSL --retry 3 "$YOKE_DOWNLOAD_URL" -o /tmp/yoke.gz

          echo "Decompressing and installing to $HOME/bin/yoke"
          mkdir -p $HOME/bin
          gunzip -c /tmp/yoke.gz > $HOME/bin/yoke
          chmod +x $HOME/bin/yoke

          echo "yoke installed at $HOME/bin/yoke"
          $HOME/bin/yoke version

      - name: Authenticate to OCI registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY_HOST }}
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ env.REGISTRY_PASSWORD }}

      - name: Build WASM
        run: |
          GOOS=wasip1 GOARCH=wasm go build -o chart.wasm

      - name: Publish WASM artifact to GHCR
        env:
          CHART_URL: oci://${{ env.REGISTRY_HOST }}/ProRocketeers/yoke-chart
        run: |
          echo "Publishing to $CHART_URL with tags: ${TAG_NAME},latest"
          $HOME/bin/yoke stow -tag "${TAG_NAME},latest" ./chart.wasm "$CHART_URL"
